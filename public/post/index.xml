<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lin-H&#39;s Blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on Lin-H&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 20 Jan 2016 22:38:56 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Json Web Token身份认证</title>
      <link>/2016/01/json-web-token/</link>
      <pubDate>Wed, 20 Jan 2016 22:38:56 +0000</pubDate>
      
      <guid>/2016/01/json-web-token/</guid>
      <description>&lt;p&gt;用户身份认证一般有5种方式&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP Basic authentication&lt;br/&gt;
在发送请求时在HTTP头中加入&lt;code&gt;authentication&lt;/code&gt;字段，将用&lt;code&gt;Base64&lt;/code&gt;编码的用户名和密码作为值，每次发送请求的时候都要发送用户名和密码，实现比较简单。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cookies&lt;br/&gt;
向后台发送用户名和密码，在用户名和密码通过验证后，保存返回的&lt;code&gt;Cookie&lt;/code&gt;作为用户已经登录的凭证，每次请求时附带这个&lt;code&gt;Cookie&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Signatures&lt;br/&gt;
用户拿到服务器给的私钥，在发送请求前，将整个请求使用私钥来加密，发送的将是一串加密信息，此方式只适用于API&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;One-Time Passwords&lt;br/&gt;
一次一密，每次登录时使用不同的密码，一般由服务端通过邮件将密码发给用户，这种登录方式比较繁琐&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;JSON Web Token&lt;br/&gt;
用户发送按照约定，向服务端发送&lt;code&gt;Header&lt;/code&gt;、&lt;code&gt;Payload&lt;/code&gt;和&lt;code&gt;Signature&lt;/code&gt;，并包含认证信息(密码)，验证通过后服务端返回一个&lt;code&gt;token&lt;/code&gt;，之后用户使用该&lt;code&gt;token&lt;/code&gt;作为登录凭证，适合于移动端和api&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>内滚动</title>
      <link>/2015/12/inner-scroll/</link>
      <pubDate>Sun, 27 Dec 2015 13:44:45 +0000</pubDate>
      
      <guid>/2015/12/inner-scroll/</guid>
      <description>&lt;p&gt;内滚动是一种布局，将传统的网页改造成类似于桌面软件的布局。像现在的酷我音乐盒的主体界面就是一个内滚动布局QQ音乐也是，将浏览器的滚动条用&lt;code&gt;overflow: hidden&lt;/code&gt;隐藏，再用HTML和CSS画一个滚动条出来，通过JavaScript来处理滚动事件。这么做的好处一是增强用户体验，网页能有客户端的体验；二是可以自定义滚动条。下面我是用Vue做了个内滚动组件，用来简单介绍内滚动的实现。

使用例子(省去了部分标签和代码)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>体验Angular2</title>
      <link>/2015/12/try-angular2/</link>
      <pubDate>Sat, 19 Dec 2015 22:42:59 +0000</pubDate>
      
      <guid>/2015/12/try-angular2/</guid>
      <description>&lt;p&gt;前几天，&lt;code&gt;Angular2&lt;/code&gt;终于发布了beta版本，API基本稳定了，我觉得是时候体验一下了。所以我决定用&lt;code&gt;Angular2&lt;/code&gt;做一个提示框组件来试试。来看看新的&lt;code&gt;Angular&lt;/code&gt;有什么优缺点。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>广州11月份实习</title>
      <link>/2015/12/2015-november-summary/</link>
      <pubDate>Sat, 12 Dec 2015 23:16:37 +0000</pubDate>
      
      <guid>/2015/12/2015-november-summary/</guid>
      <description>&lt;p&gt;2015年11月份，仍在广州实习。9月份时候的实习做的是Node.js开发，现在是Javascript工程师，也就是前端了。工作的内容也不难，但接触到的东西还是很有收获的。了解到公司的内部结构，使用的技术，真实的产品。尤其是使用浏览器内核来开发软件，解决了我好几年前关于软件开发的疑惑。还有就是MVVM框架Vue.js的使用，这个是主要内容了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS3 Animation</title>
      <link>/2015/11/css3-animation/</link>
      <pubDate>Wed, 11 Nov 2015 21:22:45 +0000</pubDate>
      
      <guid>/2015/11/css3-animation/</guid>
      <description>&lt;h2 id=&#34;css3-动画&#34;&gt;CSS3 动画&lt;/h2&gt;

&lt;p&gt;CSS3 动画不需要写一行代码，简单的动画仅需要定义一个&lt;code&gt;@keyframes&lt;/code&gt;并设置基本的参数就能动了。对比使用&lt;code&gt;Javascript&lt;/code&gt;编写的动画，CSS3 动画更简单也更高效，使用&lt;code&gt;sprite&lt;/code&gt;还能做出gif图片的效果。也可以搭配&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/SVG&#34;&gt;&lt;code&gt;SVG&lt;/code&gt;&lt;/a&gt;使用。

动画一般是由多个不同的图片不断快速切换一张图片叫做一帧，在CSS中也一样，只不过不必须使用图片。而是使用&lt;code&gt;@keyframes&lt;/code&gt;来定义一帧所要显示的“图片”。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>广州实习</title>
      <link>/2015/10/guangzhou-intership/</link>
      <pubDate>Wed, 07 Oct 2015 18:36:00 +0000</pubDate>
      
      <guid>/2015/10/guangzhou-intership/</guid>
      <description>&lt;p&gt;从19月份开始在广州实习，主要从事&lt;code&gt;Node.js&lt;/code&gt;的开发，使用&lt;code&gt;MongoDB&lt;/code&gt;数据库，&lt;code&gt;Express&lt;/code&gt;框架。在后台主要提供的是&lt;code&gt;RESTful&lt;/code&gt;的接口，前端使用&lt;code&gt;Angular&lt;/code&gt;框架进行数据整合。以下做一个简单的总结。(部分代码来自于&lt;a href=&#34;https://www.npmjs.com&#34;&gt;npmjs.org&lt;/a&gt;)
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git的各种撤销操作</title>
      <link>/2015/06/git-undo-operation/</link>
      <pubDate>Sun, 14 Jun 2015 12:32:48 +0000</pubDate>
      
      <guid>/2015/06/git-undo-operation/</guid>
      <description>&lt;p&gt;使用版本控制工具&lt;code&gt;Git&lt;/code&gt;最大的好处就是，发生错误操作、修改后可以恢复到原来最后一次正确的状态&lt;/p&gt;

&lt;h3 id=&#34;撤销git-push操作&#34;&gt;撤销git push操作&lt;/h3&gt;

&lt;p&gt;运行&lt;code&gt;git push&lt;/code&gt;后，会将新的&lt;code&gt;commit&lt;/code&gt;提交到远程仓库。可以使用&lt;code&gt;git revert&lt;/code&gt;来撤销操作&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git revert &amp;lt;SHA&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rust快速入门</title>
      <link>/2015/05/rust-quick-guide/</link>
      <pubDate>Thu, 28 May 2015 18:05:44 +0000</pubDate>
      
      <guid>/2015/05/rust-quick-guide/</guid>
      <description>&lt;h2 id=&#34;rust简介&#34;&gt;Rust简介&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Rust&lt;/code&gt;是一种编译语言，与&lt;code&gt;C&lt;/code&gt;和&lt;code&gt;Go&lt;/code&gt;一样编译后生成的是二进制文件。&lt;code&gt;Rust&lt;/code&gt;专注于&lt;code&gt;安全&lt;/code&gt;，&lt;code&gt;速度&lt;/code&gt;，&lt;code&gt;并发&lt;/code&gt;。并且不需要垃圾回收器，这也让&lt;code&gt;Rust&lt;/code&gt;在某些情况下比其他语言更好用。比如与其他语言混合编写嵌入其中、编写底层软件，驱动或操作系统。&lt;code&gt;Rust&lt;/code&gt;在编译期间会将语法错误和不安全因素最大程度地找出来，从而避免在程序运行时出现问题。&lt;code&gt;Rust&lt;/code&gt;语言可以胜任三个软件层次的开发。并且在今年5月15号发布了第一个1.0.0正式版本。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Jekyll在Github上搭建个人Blog</title>
      <link>/2015/04/build-personal-blog-with-jekyll-on-github/</link>
      <pubDate>Thu, 09 Apr 2015 20:32:46 +0000</pubDate>
      
      <guid>/2015/04/build-personal-blog-with-jekyll-on-github/</guid>
      <description>&lt;p&gt;拥有自己的个人Blog可以把自己学到的技术，想法、经历分享出来，也可以用来写日记。远比QQ空间有意思多了，尤其是对于程序员来说，可以随意折腾。&lt;code&gt;Jekyll&lt;/code&gt;就是一款生成静态页面(HTML文件)的工具，&lt;code&gt;Jekyll&lt;/code&gt;是用Ruby编写的。但使用者不需要掌握Ruby，只需要在控制台(terminal)中输入几条简单的命令就能搭建出一个Blog来，但如果你还懂得网站前端的知识如&lt;code&gt;HTML&lt;/code&gt;，&lt;code&gt;CSS&lt;/code&gt;，&lt;code&gt;Javascript&lt;/code&gt;的话，你就能完全自定义你自己的Blog。

现在先把&lt;code&gt;Jekyll&lt;/code&gt;的运行环境搭建好。因为&lt;code&gt;Jekyll&lt;/code&gt;是Ruby编写的，所以必须先安装Ruby的运行环境。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>